{"version":3,"sources":["App.module.css","components/hoc/auxillary.tsx","components/UI/Header/Header.tsx","components/UI/Footer/Footer.tsx","components/Layout/Layout.tsx","components/Charts/PieChart.tsx","utils/Data.tsx","components/DataList/DataList.tsx","components/TotalCases/TotalCases.tsx","containers/C19Tracker/C19Tracker.tsx","theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","aux","props","children","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","title","flexGrow","Header","changeTheme","classes","AppBar","position","Toolbar","className","Typography","component","variant","color","noWrap","IconButton","Tooltip","aria-label","Switch","onChange","inputProps","Copyright","align","Link","href","Date","getFullYear","footer","Box","pt","Layout","Footer","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","fontSize","toFixed","SimplePieChart","chartData","data","name","value","cases","active","deaths","total","critical","recovered","console","log","width","height","labelLine","label","map","entry","length","covidSum","countries","createList","a","axios","get","headers","covidSumData","response","countriesData","usaData","matchCountry","ukData","responseData","forEach","country","cSum","trim","dataObj","currentCon","currentCov","region","coordinates","latitude","latlng","longitude","PercentConfirmed","population","PercentDeath","PercentRecovered","push","worldData","find","item","listIndex","sort","reverse","conName","covName","currentData","currentCountry","maxWidth","dataList","padding","spacing","tableHeader","top","table","minWidth","tableContainer","maxHeight","headerBold","fontWeight","recovred","danger","palette","primary","main","error","DataList","clsx","activeCases","RowTable","TableRow","key","TableCell","scope","Paper","TableContainer","Table","size","stickyHeader","TableHead","TableBody","createStyles","paper","textAlign","secondary","contrastText","whiteSpace","divider","totalCase","text","background","TotalCases","totalData","showTotalCase","Grid","container","xs","md","lg","Divider","content","overflow","appBarSpacer","mixins","paddingTop","paddingBottom","flexDirection","fixedHeight","minHeight","alignCenter","justifyContent","alignItems","C19Tracker","useState","loading","setLoading","setDataList","fetchData","statusList","useEffect","fixedHeightPaper","CircularProgress","disableShrink","Container","themeConfigObj","red","light","lightBlue","A400","default","contrastThreshold","tonalOffset","type","useDarkMode","setTheme","updatedTheme","App","toggleDarkMode","themeConfig","createMuiTheme","ThemeProvider","AppHeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e1ac6ec9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3XzxC\"};","const aux = (props) => {\r\n  return props.children;\r\n};\r\n\r\nexport default aux;\r\n","import React from 'react';\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n  AppBar,\r\n  makeStyles,\r\n  Theme,\r\n  IconButton,\r\n  Switch,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport Brightness4OutlinedIcon from '@material-ui/icons/Brightness4Outlined';\r\nimport Brightness7OutlinedIcon from '@material-ui/icons/Brightness7Outlined';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const { changeTheme } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"absolute\">\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          Covid19Tracker\r\n        </Typography>\r\n        <IconButton color=\"inherit\">\r\n          <Tooltip title=\"DayMode\">\r\n            <IconButton aria-label=\"day-mode\" color=\"inherit\">\r\n              <Brightness4OutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Switch\r\n            onChange={() => changeTheme()}\r\n            color=\"secondary\"\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          />\r\n          <Tooltip title=\"NightMode\">\r\n            <IconButton aria-label=\"night-mode\" color=\"inherit\">\r\n              <Brightness7OutlinedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Typography, Link, Box } from '@material-ui/core';\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://vouchsafe.netlify.com/\">\r\n        chhitij.github.io\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n};\r\nconst footer = () => {\r\n  return (\r\n    <Box pt={4}>\r\n      <Copyright />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default footer;\r\n","import React from 'react';\r\nimport Aux from '../hoc/auxillary';\r\nimport Header from '../UI/Header/Header';\r\nimport Footer from '../UI/Footer/Footer';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Aux>\r\n      <Header changeTheme={props.changeTheme}></Header>\r\n      <main>{props.children}</main>\r\n      <Footer />\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst COLORS = ['#f57c00', 'red', 'red.A400', '#00e676'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n  index,\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"white\"\r\n      textAnchor={x > cx ? 'start' : 'end'}\r\n      dominantBaseline=\"central\"\r\n      fontSize=\"12px\"\r\n    >\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst SimplePieChart = (props) => {\r\n  const { chartData } = props;\r\n  let data = [\r\n    { name: 'Active', value: chartData.cases.active },\r\n    { name: 'Deaths', value: chartData.deaths.total },\r\n    { name: 'Critical', value: chartData.cases.critical },\r\n    { name: 'Recoverd', value: chartData.cases.recovered },\r\n  ];\r\n  console.log('data', data);\r\n  return (\r\n    <PieChart width={250} height={120}>\r\n      <Pie\r\n        data={data}\r\n        cx={125}\r\n        cy={60}\r\n        labelLine={false}\r\n        label={renderCustomizedLabel}\r\n        outerRadius={55}\r\n        fill=\"#8884d8\"\r\n      >\r\n        {data.map((entry, index) => (\r\n          <Cell fill={COLORS[index % COLORS.length]} />\r\n        ))}\r\n      </Pie>\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default SimplePieChart;\r\n","import axios from 'axios';\r\n\r\nvar covidSum: any = [],\r\n  countries: any = [];\r\n\r\nexport const createList = async () => {\r\n  let {\r\n      data: { response: covidSumData },\r\n    } = await axios.get('https://covid-193.p.rapidapi.com/statistics', {\r\n      headers: {\r\n        'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n        'x-rapidapi-key': '6b7d88e112msh821fe94a6f5288ap1543e5jsn321a58b7ec0b',\r\n      },\r\n    }),\r\n    { data: countriesData } = await axios.get(\r\n      'https://ajayakv-rest-countries-v1.p.rapidapi.com/rest/v1/all',\r\n      {\r\n        headers: {\r\n          'x-rapidapi-host': 'ajayakv-rest-countries-v1.p.rapidapi.com',\r\n          'x-rapidapi-key':\r\n            '6b7d88e112msh821fe94a6f5288ap1543e5jsn321a58b7ec0b',\r\n        },\r\n      }\r\n    );\r\n\r\n  covidSum = covidSumData;\r\n  countries = countriesData;\r\n\r\n  //Pulled USA and UK especially, because country and covid API's has different name for them\r\n  let usaData = matchCountry('United States', 'USA'),\r\n    ukData = matchCountry('United Kingdom', 'UK');\r\n\r\n  ////////////\r\n\r\n  let responseData: any = [];\r\n\r\n  countries.forEach((country: any, index: number) => {\r\n    covidSum.forEach((cSum: any, index: number) => {\r\n      if (country.name.trim() === cSum.country.trim()) {\r\n        let dataObj: any = {},\r\n          currentCon = { ...country },\r\n          currentCov = { ...cSum };\r\n\r\n        dataObj = { ...currentCov };\r\n        dataObj.region = `(${currentCon.region})`;\r\n        dataObj.coordinates = {\r\n          latitude: currentCon.latlng[0],\r\n          longitude: currentCon.latlng[1],\r\n        };\r\n        dataObj.PercentConfirmed =\r\n          (dataObj.cases.total * 100) / currentCon.population;\r\n        dataObj.PercentDeath =\r\n          (dataObj.deaths.total * 100) / dataObj.cases.total;\r\n        dataObj.PercentRecovered =\r\n          (dataObj.cases.recovered * 100) / dataObj.cases.total;\r\n        responseData.push(dataObj);\r\n      }\r\n    });\r\n  });\r\n\r\n  // Pulled WORLD data\r\n  let worldData = { ...covidSum.find((data) => data.country === 'All') };\r\n\r\n  worldData.country = 'World';\r\n  worldData.PercentConfirmed = (worldData.cases.total * 100) / 6730998923;\r\n  worldData.PercentDeath =\r\n    (worldData.deaths.total * 100) / worldData.cases.total;\r\n  worldData.PercentRecovered =\r\n    (worldData.cases.recovered * 100) / worldData.cases.total;\r\n\r\n  ////////////\r\n\r\n  responseData.push(usaData, ukData, worldData);\r\n  // return responseData;\r\n  return [\r\n    // Schwartzian transform\r\n    responseData\r\n      .map((item: any, index) => [\r\n        +item['cases'].total,\r\n        { ...item, listIndex: index },\r\n      ])\r\n      .sort(([a], [b]) => b - a)\r\n      .map(([, item]) => item),\r\n    responseData\r\n      .map((item: any, index) => [\r\n        +item.PercentConfirmed,\r\n        { ...item, listIndex: index },\r\n      ])\r\n      .sort(([a], [b]) => b - a)\r\n      .map(([, item]) => item)\r\n      .reverse(),\r\n    responseData\r\n      .map((item, index) => [+item.PercentDeath, { ...item, listIndex: index }])\r\n      .sort(([a], [b]) => b - a)\r\n      .map(([, item]) => item)\r\n      .reverse(),\r\n    responseData\r\n      .map((item, index) => [\r\n        +item.PercentRecovered,\r\n        { ...item, listIndex: index },\r\n      ])\r\n      .sort(([a], [b]) => b - a)\r\n      .map(([, item]) => item)\r\n      .reverse(),\r\n  ];\r\n};\r\n\r\nexport const matchCountry = (conName: string, covName: string) => {\r\n  let currentData = { ...covidSum.find((data) => data.country === covName) };\r\n  let currentCountry = countries.find((data) => data.name === conName);\r\n  currentData.region = `(${currentCountry.region})`;\r\n  currentData.coordinates = {\r\n    latitude: currentCountry.latlng[0],\r\n    longitude: currentCountry.latlng[1],\r\n  };\r\n  currentData.PercentConfirmed =\r\n    (currentData.cases.total * 100) / currentCountry.population;\r\n  currentData.PercentDeath =\r\n    (currentData.deaths.total * 100) / currentData.cases.total;\r\n  currentData.PercentRecovered =\r\n    (currentData.cases.recovered * 100) / currentData.cases.total;\r\n  return currentData;\r\n};\r\n\r\nexport const createDetailData = async (data) => {\r\n  let res = await axios.get(\r\n      `https://covid-193.p.rapidapi.com/history?country=${data.country}`,\r\n      {\r\n        headers: {\r\n          'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n          'x-rapidapi-key':\r\n            '6b7d88e112msh821fe94a6f5288ap1543e5jsn321a58b7ec0b',\r\n        },\r\n      }\r\n    ),\r\n    dataList = res.data.response,\r\n    responseList: any = [];\r\n  const arrLen = dataList.length;\r\n  for (let index = 0; index < arrLen; index++) {\r\n    const data = dataList[index];\r\n    let dataObj: any = {};\r\n    dataObj.total = data.cases.total;\r\n    dataObj.recovered = data.cases.recovered;\r\n    dataObj.death = data.deaths.total;\r\n    dataObj.time = data.time;\r\n    responseList.push(dataObj);\r\n  }\r\n  responseList.reverse();\r\n  return responseList;\r\n};\r\n","import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport clsx from 'clsx';\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  dataList: {\r\n    display: 'flex',\r\n    padding: theme.spacing(1),\r\n  },\r\n  tableHeader: {\r\n    position: 'sticky',\r\n    top: 0,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 450,\r\n  },\r\n  headerBold: {\r\n    fontWeight: 'bold',\r\n  },\r\n  recovred: {\r\n    color: '#00e676',\r\n  },\r\n  danger: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  active: {\r\n    color: '#f57c00',\r\n  },\r\n\r\n  critical: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nexport const DataList = (props: any) => {\r\n  const classes = useStyles();\r\n  const { dataList } = props;\r\n  const recovered = clsx(classes.recovred, classes.headerBold);\r\n  const danger = clsx(classes.danger, classes.headerBold);\r\n  const activeCases = clsx(classes.active, classes.headerBold);\r\n  const critical = clsx(classes.critical, classes.headerBold);\r\n  const RowTable = () => {\r\n    return dataList.map((item, index) => {\r\n      return (\r\n        <TableRow key={item.country}>\r\n          <TableCell component=\"th\" scope=\"row\">\r\n            {item.country}\r\n          </TableCell>\r\n          <TableCell align=\"left\">{item.cases.total}</TableCell>\r\n          <TableCell align=\"left\">{item.cases.active}</TableCell>\r\n          <TableCell align=\"left\">{item.deaths.total}</TableCell>\r\n          <TableCell align=\"left\">{item.cases.recovered}</TableCell>\r\n          <TableCell align=\"left\">{item.cases.critical}</TableCell>\r\n        </TableRow>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <Paper>\r\n      <TableContainer className={classes.tableContainer}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n          stickyHeader={true}\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.headerBold}>Country</TableCell>\r\n              <TableCell className={classes.headerBold} align=\"left\">\r\n                Total\r\n              </TableCell>\r\n              <TableCell className={activeCases} align=\"left\">\r\n                Active\r\n              </TableCell>\r\n              <TableCell className={danger} align=\"left\">\r\n                Deaths\r\n              </TableCell>\r\n              <TableCell className={recovered} align=\"left\">\r\n                Recovered\r\n              </TableCell>\r\n              <TableCell className={critical} align=\"left\">\r\n                Critical\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <RowTable />\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DataList;\r\n","import React from 'react';\r\nimport Aux from '../hoc/auxillary';\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  Divider,\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n      color: theme.palette.secondary.contrastText,\r\n      whiteSpace: 'nowrap',\r\n      fontSize: '15px',\r\n    },\r\n    divider: {},\r\n    totalCase: {\r\n      fontSize: '1em',\r\n      fontWeight: 'bold',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    headerBold: {\r\n      fontWeight: 'bold',\r\n    },\r\n    recovred: {\r\n      background: theme.palette.secondary.main,\r\n    },\r\n    danger: {\r\n      background: theme.palette.primary.main,\r\n    },\r\n    active: {\r\n      background: '#f57c00',\r\n    },\r\n    critical: {\r\n      background: theme.palette.error.main,\r\n    },\r\n  })\r\n);\r\nconst TotalCases = (props: any) => {\r\n  const { totalData } = props;\r\n  const classes = useStyles();\r\n  const showTotalCase = clsx(classes.paper, classes.totalCase);\r\n  const recovered = clsx(classes.paper, classes.recovred, classes.headerBold);\r\n  const danger = clsx(classes.paper, classes.danger, classes.headerBold);\r\n  const critical = clsx(classes.paper, classes.critical, classes.headerBold);\r\n  const activeCases = clsx(classes.paper, classes.active, classes.headerBold);\r\n  return (\r\n    <Aux>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={9} lg={9} className={showTotalCase}>\r\n          Total Coronavirus Cases :\r\n        </Grid>\r\n        <Grid item xs={12} md={3} lg={3} className={showTotalCase}>\r\n          {totalData.cases.total}\r\n        </Grid>\r\n        <Divider className={classes.divider} />\r\n        <Grid item xs={12} md={3} lg={3}>\r\n          <Paper className={activeCases}>\r\n            <Grid>Active</Grid>\r\n            <Grid>{totalData.cases.active}</Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} lg={3}>\r\n          <Paper className={danger}>\r\n            <Grid>Deaths</Grid>\r\n            <Grid>{totalData.deaths.total}</Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} lg={3}>\r\n          <Paper className={recovered}>\r\n            <Grid>Recoverd</Grid>\r\n            <Grid>{totalData.cases.recovered}</Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} lg={3}>\r\n          <Paper className={critical}>\r\n            <Grid>Critical</Grid>\r\n            <Grid>{totalData.cases.critical}</Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default TotalCases;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Aux from '../../components/hoc/auxillary';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  makeStyles,\r\n  Theme,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport SimplePieChart from '../../components/Charts/PieChart';\r\nimport { createList } from '../../utils/Data';\r\nimport DataList from '../../components/DataList/DataList';\r\nimport TotalCases from '../../components/TotalCases/TotalCases';\r\n// import classes from './C19Tracker.module.css';\r\n// creating class based comonent\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    minHeight: 150,\r\n  },\r\n  alignCenter: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n  },\r\n}));\r\n\r\nconst C19Tracker = () => {\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = useState(true),\r\n    [dataList, setDataList] = useState([]),\r\n    [originalList, setOriginalList] = useState([]);\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const statusList = await createList();\r\n    console.log('statusList', statusList);\r\n    // setOriginalList(statusList);\r\n    setDataList(statusList[0]);\r\n    setLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <Aux>\r\n      <div className={classes.appBarSpacer} />\r\n      {loading ? (\r\n        <Grid className={classes.alignCenter}>\r\n          <CircularProgress disableShrink />\r\n        </Grid>\r\n      ) : (\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <TotalCases totalData={dataList[0]} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <SimplePieChart chartData={dataList[0]} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <DataList dataList={dataList} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      )}\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default C19Tracker;\r\n","import { useState } from 'react';\r\nimport { red, lightBlue } from '@material-ui/core/colors';\r\n\r\nconst themeConfigObj = {\r\n  palette: {\r\n    primary: {\r\n      main: red['700'],\r\n    },\r\n    secondary: {\r\n      main: '#00e676',\r\n      light: lightBlue[900],\r\n      contrastText: '#fff',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n    // Used by `getContrastText()` to maximize the contrast between\r\n    // the background and the text.\r\n    contrastThreshold: 3,\r\n    // Used by the functions below to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n    type: 'light',\r\n  },\r\n};\r\n// A custom theme for this app\r\n//const theme = createMuiTheme({});\r\n\r\nconst useDarkMode = () => {\r\n  const [theme, setTheme] = useState<any>(themeConfigObj);\r\n  const {\r\n    palette: { type },\r\n  } = theme;\r\n  const toggleDarkMode = () => {\r\n    const updatedTheme = {\r\n      ...theme,\r\n      palette: {\r\n        ...theme.palette,\r\n        type: type === 'light' ? 'dark' : 'light',\r\n      },\r\n    };\r\n    setTheme(updatedTheme);\r\n  };\r\n  return [theme, toggleDarkMode];\r\n};\r\n\r\nexport default useDarkMode;\r\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Layout from './components/Layout/Layout';\n// import Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport C19Tracker from './containers/C19Tracker/C19Tracker';\nimport classes from './App.module.css';\nimport { Paper, ThemeProvider, createMuiTheme, Theme } from '@material-ui/core';\nimport useDarkMode from './theme';\n\ndeclare type darkMode = {\n  palette: any;\n};\n\nconst App = () => {\n  const [theme, toggleDarkMode] = useDarkMode();\n  const themeConfig = createMuiTheme(theme as Theme);\n  const setThemeMode = () => {\n    toggleDarkMode();\n  };\n  return (\n    <ThemeProvider theme={themeConfig}>\n      <Paper className={classes.AppHeight}>\n        <Container className={classes.App}>\n          <Layout changeTheme={setThemeMode}>\n            <Typography align=\"center\" variant=\"h5\">\n              <C19Tracker />\n            </Typography>\n          </Layout>\n        </Container>\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\nimport { CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}